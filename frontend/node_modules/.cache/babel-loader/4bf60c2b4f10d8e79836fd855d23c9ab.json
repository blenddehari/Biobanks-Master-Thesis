{"remainingRequest":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/babel-loader/lib/index.js!/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/src/components/DynamicInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/src/components/DynamicInput.vue","mtime":1638004446609},{"path":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dehble/Desktop/Biobanks demo/Databanks-demo-project/fronted/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9kZWhibGUvRGVza3RvcC9CaW9iYW5rcyBkZW1vL0RhdGFiYW5rcy1kZW1vLXByb2plY3QvZnJvbnRlZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5wdXRzOiBbewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGxvaW5jQ29kZTogJycsCiAgICAgICAgdmFsdWU6IHsKICAgICAgICAgIGZyb21WYWx1ZTogJycsCiAgICAgICAgICB0b1ZhbHVlOiAnJwogICAgICAgIH0gLy8gICByYW5nZVF1ZXJ5OiBmYWxzZQoKICAgICAgfV0sCiAgICAgIHJhbmdlUXVlcnk6IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGFkZDogZnVuY3Rpb24gYWRkKCkgewogICAgICB0aGlzLmlucHV0cy5wdXNoKHsKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBsb2luY0NvZGU6ICcnLAogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICBmcm9tVmFsdWU6ICcnLAogICAgICAgICAgdG9WYWx1ZTogJycKICAgICAgICB9IC8vIHJhbmdlUXVlcnk6IGZhbHNlCgogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShpbmRleCkgewogICAgICB0aGlzLmlucHV0cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5pbnB1dHMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgaW5wdXQgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICBpZiAoIWlucHV0LnZhbHVlLnRvVmFsdWUpIHsKICAgICAgICAgICAgaW5wdXQudmFsdWVbJ3RvVmFsdWUnXSA9IGlucHV0LnZhbHVlWydmcm9tVmFsdWUnXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGhpcy5pbnB1dHMpOwogICAgfSwKICAgIHRvZ2dsZVF1ZXJ5VHlwZTogZnVuY3Rpb24gdG9nZ2xlUXVlcnlUeXBlKCkgewogICAgICAvLyAgIGxldCBjb3B5SW5wdXRzID0gWy4uLiBpbnB1dHNdCiAgICAgIC8vICAgY29weUlucHV0c1tpbmRleF0gPSB7IHJhbmdlUXVlcnk6ICFyYW5nZVF1ZXJ5IH0KICAgICAgLy8gY29uc29sZS5sb2coaW5wdXQpCiAgICAgIC8vIHRoaXMuJHNldCh0aGlzLmlucHV0cywgaW5kZXgsIGlucHV0LnJhbmdlUXVlcnkgPSAhaW5wdXQucmFuZ2VRdWVyeSkKICAgICAgdGhpcy5yYW5nZVF1ZXJ5ID0gIXRoaXMucmFuZ2VRdWVyeTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["DynamicInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AACA,UAAA,SAAA,EAAA,EADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAHA,CAOA;;AAPA,OADA,CADA;AAYA,MAAA,UAAA,EAAA;AAZA,KAAA;AAcA,GAhBA;AAkBA,EAAA,OAlBA,qBAkBA,CAEA,CApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,WAAA,MAAA,CAAA,IAAA,CACA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AACA,UAAA,SAAA,EAAA,EADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAHA,CAOA;;AAPA,OADA;AAUA,KAZA;AAaA,IAAA,MAbA,kBAaA,KAbA,EAaA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAfA;AAgBA,IAAA,MAhBA,oBAgBA;AAAA,iDACA,KAAA,MADA;AAAA;;AAAA;AACA,4DAAA;AAAA,cAAA,KAAA;;AACA,cAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA,IAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA;AACA,KAvBA;AAwBA,IAAA,eAxBA,6BAwBA;AACA;AACA;AACA;AACA;AACA,WAAA,UAAA,GAAA,CAAA,KAAA,UAAA;AACA;AA9BA;AArBA,CAAA","sourcesContent":["<template>\n<div>\n    <div v-for=\"(input, index) in inputs\" :key=\"index\">\n        <input type=\"text\" class=\"form\" v-model=\"input.name\">\n         <input type=\"text\" class=\"form\" v-model=\"input.loincCode\">\n        <input type=\"text\" class=\"form\" v-model=\"input.value.fromValue\">\n         <input v-show=\"rangeQuery\" type=\"text\" class=\"form\" v-model=\"input.value.toValue\">\n        <span>\n            <i class=\"fas fa-minus-circle\" @click=\"remove(index)\" v-show=\"index || (!index && inputs.length > 1)\"><v-icon style=\"margin-right:0px\">mdi-minus</v-icon></i>\n            <i class=\"fas fa-minus-circle\" @click=\"add(index)\" v-show=\"index == inputs.length - 1\"><v-icon style=\"margin-right:0px\">mdi-plus</v-icon></i>\n        </span>\n        <button class=\"button2\" @click=\"toggleQueryType()\">{{rangeQuery ? \"Point Query\" : \"Range Query\"}}</button>\n    </div>\n        <button class=\"button2\" @click=\"submit()\">Submit</button>\n</div>\n</template>\n\n<script>\nexport default {  \n  data () {\n    return {\n      inputs: [\n          {\n              name: '',\n              loincCode: '',\n              value: {\n                  fromValue: '',\n                  toValue: ''\n              },\n            //   rangeQuery: false\n          }\n      ],\n      rangeQuery: false\n    }\n  },  \n\n  mounted () {\n   \n},\nmethods: {\n  add() {\n      this.inputs.push(\n        { \n        name: \"\", \n        loincCode: '', \n        value: {\n            fromValue: '',\n            toValue: ''\n        },\n        // rangeQuery: false\n        })\n  },\n  remove(index) {\n      this.inputs.splice(index, 1)\n  },\n  submit(){\n      for (let input of this.inputs) {\n          if (!input.value.toValue) {\n              input.value['toValue'] = input.value['fromValue']\n          }\n      }\n      console.log(this.inputs)\n  },\n  toggleQueryType() {\n    //   let copyInputs = [... inputs]\n    //   copyInputs[index] = { rangeQuery: !rangeQuery }\n    // console.log(input)\n    // this.$set(this.inputs, index, input.rangeQuery = !input.rangeQuery)\n      this.rangeQuery = !this.rangeQuery\n  }\n}\n}\n</script>\n\n<style>\n .form{\n  position: relative;\n  width: 100%;\n  max-width: 200px;\n  margin: 5px ;\n  margin-top: 3em;\n  border: solid 2px\n}\n.button2 {\n     border: solid 2px;\n     margin: 5px;\n     margin-top: 3em;\n}\n\n</style>"],"sourceRoot":"src/components"}]}