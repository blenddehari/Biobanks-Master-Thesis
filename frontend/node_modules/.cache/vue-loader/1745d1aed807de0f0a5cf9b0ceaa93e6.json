{"remainingRequest":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/src/components/QueryComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/src/components/QueryComponent.vue","mtime":1677417559972},{"path":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dehble/Desktop/Biobanks/Databanks-demo-project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["QueryComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6WA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QueryComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <ErrorAlert v-model=\"errorTitle\">{{ errorDetail }}</ErrorAlert>\n    <ErrorAlert v-model=\"successTitle\" type=\"success\">{{ successDetail }}</ErrorAlert>\n    <v-overlay :value=\"isLoading\">\n          <v-progress-circular\n          indeterminate\n          size=\"64\"\n          color=\"primary\"\n        ></v-progress-circular>\n    </v-overlay>\n\n    <v-sheet\n        color=\"#78909Cad\"\n        elevation=\"2\"\n        rounded\n        :class=\"rangeQuery ? 'rangeQuerySheet' : 'pointQuerySheet'\"\n    >\n    <div v-if=\"isLoading\" >\t\n        <div>\n            <v-skeleton-loader v-for=\"(input, index) in inputs\" :key=\"index\" style=\"margin: 1.5em;\"\n                max-width=\"200%\"\n                min-width=\"200%\"\n                type=\"heading\"\n                fluid\n            ></v-skeleton-loader>\n        </div>\n    </div>\n    <div v-for=\"(input, index) in inputs\" :key=\"index\" v-else>\n        <v-form :class=\"rangeQuery ? 'formExpand' : 'form'\" ref=\"form\" lazy-validation v-model=\"valid\"> \n            <v-container class=\"container\">\n                <v-row style=\"margin-left:-2em; align-self: auto\" >\n\n                    <v-col class=\"mt-2\" >\n                        <v-text-field required v-model=\"input.name\" label=\"Attribute name\" solo :rules=\"rules\" :error-messages=\"errorTexts\"></v-text-field>\n                    </v-col>\n\n                    <!-- GETTING LOINCS ON SERVER-SIDE SEARCH --> \n                    <v-col class=\"mt-2\">\n                        <v-combobox @blur=\"checkLoincInput(index)\" @change=\"searchLoinc($event)\" clearable v-model=\"input.loincCode\" :items=\"currentLoincList\"\n                        :item-text=\"item => item.loincnum +' ('+ item.loinccomponent + ')'\"\n                            :item-value=\"item => item.loincnum\" label=\"Search LOINC codes\" solo prepend-inner-icon=\"mdi-magnify\" return-object required :rules=\"rules\" :error-messages=\"loincErrorTexts\">\n                            <template v-slot:selection=\"{ attrs, item, selected }\">\n                                <v-chip v-if=\"item === Object(item)\" v-bind=\"attrs\" color=\"lighten-3\"\n                                    :input-value=\"selected\" label small>\n                                    <span>\n                                        {{ item.loincnum }} ({{item.loinccomponent}})\n                                    </span>\n                                </v-chip>\n                            </template>\n                        </v-combobox>\n                    </v-col>\n\n                    <v-col class=\"mt-2\">\n                        <v-text-field \n                            v-model=\"input.value.fromValue\" \n                            :label=\"rangeQuery ? 'FROM value' :  'Value'\"\n                            solo :rules=\"rules\" \n                            :error-messages=\"errorTexts\" \n                            required\n                            >\n                        </v-text-field>\n                    </v-col>\n\n                    <v-col class=\"mt-2\">\n                        <v-text-field v-show=\"rangeQuery\" v-model=\"input.value.toValue\" label=\"TO value\" solo :rules=\"rules\" :error-messages=\"errorTexts\" required>\n                        </v-text-field>\n\n                        <!-- This is for the icons to be in the middle of the fields -->\n                        <hr style=\"height:10px; visibility:hidden;\" />\n\n                        <span v-show=\"!rangeQuery\" class=\"helperIcons\">\n                            <i class=\"round\" @click=\"remove(index)\" v-show=\"index || (!index && inputs.length > 1)\">\n                                <v-icon style=\"margin-right:0px\">mdi-minus</v-icon>\n                            </i>\n                            <i class=\"round\" @click=\"add(index)\" v-show=\"index == inputs.length - 1\">\n                                <v-icon style=\"margin-right:0px\">mdi-plus</v-icon>\n                            </i>\n                        </span>\n                    </v-col>\n                    \n                    <!-- We have this extra column that we show when switching to range query to avoid the +- icons going below the query boxes -->\n                    <v-col class=\"mt-2\" v-show=\"rangeQuery\" col=\"6\" md=\"2\">\n                        <hr style=\"height:10px; visibility:hidden;\" />\n                       <span class=\"helperIcons\">\n                            <i class=\"round\" @click=\"remove(index)\" v-show=\"index || (!index && inputs.length > 1)\">\n                                <v-icon style=\"margin-right:0px\">mdi-minus</v-icon>\n                            </i>\n                            <i class=\"round\" @click=\"add(index)\" v-show=\"index == inputs.length - 1\">\n                                <v-icon style=\"margin-right:0px\">mdi-plus</v-icon>\n                            </i>\n                        </span>\n                    </v-col>\n\n                </v-row>\n\n            </v-container>\n        </v-form>\n\n        <br />\n\n    </div>\n<!-- </v-card> -->\n</v-sheet>\n\n    <!-- Uncomment this if you want the button text to be dynamic based on the query type -->\n    <!-- <v-btn elevation=\"2\" raised class=\"button\" v-on:click=\"toggleQueryType()\">\n        {{rangeQuery ? \"Point Query\" : \"Range Query\"}}</v-btn> -->\n\n    <br /> \n\n<v-sheet\n  color=\"#78909Cad\"\n  elevation=\"2\"\n  height=\"120\"\n  rounded\n  style=\"margin-left:200px;margin-right:200px; padding: 1.5em; \"\n>\n<!-- <v-card style=\"margin-left: 10em; marin-right: -6em;\" > -->\n     <div v-if=\"isLoading\" >\t\n        <div>\n            <v-skeleton-loader\n            class=\"fancyButtonSkeleton\"\n            style=\"display: flex;flex-wrap: wrap;flex-direction: row;\"\n                max-width=\"100%\"\n                min-width=\"100%\"\n                type=\"button@5\"\n                fluid\n            ></v-skeleton-loader>\n        </div>\n    </div>\n    <div class=\"center-screen\" v-else>\n        <v-btn elevation=\"2\" raised class=\"fancyButton\" v-on:click=\"submit()\">\n            <v-icon style=\"margin-right:0px\">mdi-magnify</v-icon>Search\n        </v-btn>\n\n        <!-- CLEAR QUERIES -->\n        <v-btn elevation=\"2\" raised class=\"fancyButton\" v-on:click=\"clearQueryData()\">\n            <v-icon style=\"margin-right:0px\">mdi-table-row-remove</v-icon>Clear Query Data\n        </v-btn>\n\n        <!-- SIMULATE PATRICK SENDING DATA TO THE BACKEND -->\n\n        <v-btn elevation=\"2\" raised class=\"fancyButton\" @click=\"simulatePatrickSendingData()\">\n          <v-icon style=\"margin-right:0px\">mdi-lan-pending</v-icon> Simulate biobanks sending data\n        </v-btn>\n        \n        <v-btn elevation=\"2\" raised class=\"fancyButton\" @click=\"toggleThreshold\">\n           <v-icon style=\"margin-right:0px\">mdi-tune</v-icon> Choose Thresholds\n        </v-btn>\n\n        <v-switch class=\"fancySwitch\" dark v-model=\"rangeQuery\" inset  label=\"Range Query\"></v-switch> \n    </div>\n\n<v-dialog v-model=\"showThreshold\" max-width=\"600\" transition=\"dialog-bottom-transition\">\n     <v-card v-show=\"showThreshold\" style=\"width: 600px; margin:auto; \"\n            elevation=\"2\"\n        >\n            <v-toolbar\n                color=\"primary\"\n                dark\n                flat\n                height=\"50px\"\n              >Choose your desired thresholds below</v-toolbar>\n            <div style=\"padding: 60px 50px 30px 50px\">\n                <v-label>Overall expected hit ratio</v-label> <br/>\n                <v-btn style=\"margin: 10px 0px 40px 0px;\" rounded outlined @click=\"overallExpectedHitThreshold = !overallExpectedHitThreshold\">  \n                    <v-icon left>\n                    mdi-pencil\n                    </v-icon>\n                    {{overallExpectedHitThreshold ? 'Hide thresholds' : 'Show thresholds'}} \n                </v-btn>\n                <v-slider v-show=\"overallExpectedHitThreshold\"\n                    v-model=\"thresholdGoodValues\"\n                    label=\"😄 Good values\"\n                    thumb-label=\"always\"\n                    max=\"100\"\n                    min=\"0\"\n                    persistent-hint\n                    hint=\"Values over this threshold would be considered good results.\"\n                    color=\"green\"\n                    track-color=\"green\"\n                    thumb-color=\"green\"\n                >\n                    <template v-slot:thumb-label=\"{ value }\">\n                        {{ value }}%\n                    </template>\n                </v-slider>\n                <br/>\n                <br/>\n                <v-slider v-show=\"overallExpectedHitThreshold\"\n                    v-model=\"thresholdOkayValues\"\n                    label=\"🙂 Okay values\"\n                    thumb-label=\"always\"\n                    max=\"100\"\n                    min=\"0\"\n                    persistent-hint\n                    hint=\"Values in between this threshold and the threshold above would be considered okay-ish results. Values below this threshold would be considered bad results 🙁 (and will be shown with color red).\"\n                    color=\"orange\"\n                    track-color=\"orange\"\n                    thumb-color=\"orange\"\n                >\n                <template v-slot:thumb-label=\"{ value }\">\n                    {{ value }}%\n                </template>\n                </v-slider>\n                <br/><br/>\n\n                 <v-label>Hit ratio per LOINC</v-label> <br/>\n                <v-btn style=\"margin: 10px 0px 40px 0px;\" rounded outlined @click=\"overallExpectedHitsPerLoincThreshold = !overallExpectedHitsPerLoincThreshold\">  \n                    <v-icon left>\n                    mdi-pencil\n                    </v-icon>\n                    {{overallExpectedHitsPerLoincThreshold ? 'Hide thresholds' : 'Show thresholds'}} \n                </v-btn>\n                <v-slider v-show=\"overallExpectedHitsPerLoincThreshold\"\n                    v-model=\"thresholdGoodValuesPerLoinc\"\n                    label=\"😄 Good values\"\n                    thumb-label=\"always\"\n                    max=\"100\"\n                    min=\"0\"\n                    persistent-hint\n                    hint=\"Values over this threshold would be considered good results.\"\n                    color=\"green\"\n                    track-color=\"green\"\n                    thumb-color=\"green\"\n                >\n                    <template v-slot:thumb-label=\"{ value }\">\n                        {{ value }}%\n                    </template>\n                </v-slider>\n                <br/>\n                <br/>\n                <v-slider v-show=\"overallExpectedHitsPerLoincThreshold\"\n                    v-model=\"thresholdOkayValuesPerLoinc\"\n                    label=\"🙂 Okay values\"\n                    thumb-label=\"always\"\n                    max=\"100\"\n                    min=\"0\"\n                    persistent-hint\n                    hint=\"Values in between this threshold and the threshold above would be considered okay-ish results. Values below this threshold would be considered bad results 🙁 (and will be shown with color red).\"\n                    color=\"orange\"\n                    track-color=\"orange\"\n                    thumb-color=\"orange\"\n                >\n                <template v-slot:thumb-label=\"{ value }\">\n                    {{ value }}%\n                </template>\n                </v-slider>\n                <br/><br/>\n\n\n                <v-text-field required color=\"green\" v-model=\"thresholdExpectedHits\" label=\"Overall expected hits\" hint=\"Values over this threshold will be considered good results and will appear with the color green.\" persistent-hint type=\"number\"></v-text-field>\n                <br/><br/>\n                \n                 <v-btn\n                    text\n                    color=\"primary\"\n                    @click=\"toggleThreshold\"\n                    >\n                    Close\n                </v-btn>\n            </div>\n        </v-card>\n</v-dialog>\n<!-- </v-card> -->\n</v-sheet>\n\n    <div style=\"margin: 2em; z-index:0\">\n        <h3 style=\"color: white;\" v-show=\"datasetsLoaded && !isLoading\">Time: {{ queryTime }} seconds ({{ (queryTime / 60).toFixed(2)}} minutes)</h3>\n       <div v-if=\"isLoading\" >\n\t\t\t<div>\n\t\t\t\t<v-skeleton-loader\n\t\t\t\t\tclass=\"mx-auto\"\n\t\t\t\t\tmax-width=\"100%\"\n\t\t\t\t\ttype=\"heading, table-row-divider@15, table-tfoot\"\n\t\t\t\t\tfluid\n\t\t\t\t></v-skeleton-loader>\n\t\t\t</div>\n\t\t</div>\n        <!-- NEW TABLE (EXPANDABLE)  -->\n        <v-data-table \n            v-if=\"datasetsLoaded && !isLoading\"\n            id=\"rankingTable\"\n            :headers=\"headers2\"\n            :items=\"datasets\" \n            :single-expand=\"false\"\n            :expanded.sync=\"expanded\"\n            item-key=\"collectionId\"\n            show-expand\n            style=\"margin-top:10px;\" \n            disable-sort\n        >\n        \n        <template v-slot:top>\n            <v-toolbar flat color=\"white\">\n            <v-toolbar-title>Ranked Results</v-toolbar-title>\n            <v-spacer></v-spacer>\n            </v-toolbar>\n        </template>\n\n        <template #item.overallPercentage=\"{value}\">\n            <td class=\"d-flex justify-center\">\n                <v-chip style=\"margin:10px;\" :color=\"getColor(value * 100)\" dark>  {{ parseFloat(value * 100).toFixed(2) }}% </v-chip>\n            </td>\n        </template>\n            <template #item.overallExpectedRows=\"{item}\">\n            <td class=\"d-flex justify-center\" >\n                <v-chip style=\"margin:10px;\" :color=\"getColorForExpectedHits(item.overallExpectedRows)\" dark> {{ Math.round(item.overallExpectedRows) }} </v-chip>\n            </td>\n        </template>\n    \n      <template #expanded-item=\"{ headers, item }\">\n        <td  :colspan=\"headers.length \">\n            <v-row >\n                <v-col cols=\"12\" md=\"12\">\n                   <h4 class=\"text\" style=\"display:inline; \">Expected hits per LOINC: </h4>\n                   <v-chip  style=\"margin:10px;\"  v-for=\"(row,index) in item.goodHits\" :key=\"index\" dark>\n                       <v-chip class=\"ma-2\" small\n                            color=\"white\"\n                            outlined>{{ row.code }}: \n                        </v-chip>  \n                        {{Math.round(row.revisedNumberOfRows)}}</v-chip> \n                </v-col>\n            </v-row>\n            <v-divider></v-divider>\n            <v-row >\n                <v-col cols=\"12\" md=\"12\">\n                    <h4 class=\"text\" style=\"display:inline; margin-right:50px;\">Hit ratio per LOINC: </h4>\n                    <v-chip style=\"margin:10px;\" v-for=\"(row,index) in item.goodHits\" :key=\"index\" :color=\"getColorPerLoinc(row.goodValuesInPercentage * 100)\" dark>\n                       <v-chip class=\"ma-2\" small \n                            color=\"white\"\n                            outlined>{{ row.code }}: \n                        </v-chip> \n                        {{ parseFloat(row.goodValuesInPercentage * 100).toFixed(2) }}%\n                    </v-chip>                \n                </v-col>\n            </v-row>\n            <v-divider style=\"margin-bottom: 10px;\"></v-divider>\n            <v-row>\n                 <v-col cols=\"12\" md=\"6\" style=\"margin-bottom:10px;\">\n                    <!-- <p style=\"display:inline; font-size: 0.9em;\">Full collection? </p> -->\n                    <h4 class=\"text\" style=\"display:inline; \">Full collection? </h4>\n                        <v-icon color=\"green\" v-show=\"!item.definitionId\">mdi-checkbox-marked-circle</v-icon> \n                        <v-icon color=\"red\" v-show=\"item.definitionId\">mdi-close-circle</v-icon>          \n                </v-col>\n            </v-row>\n        </td>\n      </template>\n    </v-data-table>\n\n\n    </div>\n\n    <v-footer ref=\"footer\" :absolute=\"true\" :padless=\"true\" class=\"footer\">\n        <h6 style=\"margin-left: 10px;font-family: 'Arial';\">Master Thesis at University of Klagenfurt</h6>\n        <v-spacer></v-spacer>\n        <h6>Author: Blend Dehari (blendde@edu.aau.at)</h6>\n        <v-spacer></v-spacer>\n        <h6 style=\"margin-right: 10px;font-family: 'Arial';\">All rights reserved.</h6>\n    </v-footer>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ErrorAlert from './ErrorAlert.vue'\n\nexport default { \n    name: 'QueryComponent',\n    components: { ErrorAlert },\n\n      data() {\n          return {\n              url: 'http://localhost:5001',\n              valid: true,\n              isLoading: false,\n              errorTitle: '',\n              errorDetail: '',\n              successTitle: null,\n              successDetail: null,\n              rules: [\n                v => !!v || 'Required',\n              ],\n              errorTexts:'',\n              loincErrorTexts: '',\n              inputs: [{\n                  name: '',\n                  loincCode: '',\n                  value: {\n                      fromValue: '',\n                      toValue: ''\n                  },\n              }],\n              rangeQuery: false,\n              fullPage: true,\n              loincCodes: [],\n              loincsLoaded: false,\n              currentLoincList: [],\n              datasetsLoaded: false,\n              datasets: [],\n\n              showThreshold: false,\n              thresholdGoodValues: 50,\n              thresholdOkayValues: 25,\n              thresholdGoodValuesPerLoinc: 50,\n              thresholdOkayValuesPerLoinc: 25,\n              detailedView: false,\n              thresholdExpectedHits: 0,\n              expanded: [],\n              overallExpectedHitThreshold: false,\n              overallExpectedHitsPerLoincThreshold: false,\n              queryTime: '',\n              temporaryFakeDatasets: [\n                    {\n                        \"biobankId\": \"biobank_6\",\n                        \"collectionId\": \"collection_6\",\n                        \"numberOfRows\": 46,\n                        \"goodHits\": [\n                            {\n                                \"code\": \"10156-8\",\n                                \"goodValuesInPercentage\": 0.0625,\n                                \"revisedNumberOfRows\": 2.875\n                            }\n                        ],\n                        \"overallPercentage\": 0.0625,\n                        \"overallExpectedRows\": 2.875\n                    },\n                    {\n                        \"biobankId\": \"biobank_1\",\n                        \"collectionId\": \"collection_1\",\n                        \"numberOfRows\": 15,\n                        \"goodHits\": [\n                            {\n                                \"code\": \"10156-8\",\n                                \"goodValuesInPercentage\": 0.1111111111111111,\n                                \"revisedNumberOfRows\": 1.6666666666666665\n                            }\n                        ],\n                        \"overallPercentage\": 0.1111111111111111,\n                        \"overallExpectedRows\": 1.6666666666666665\n                    }\n                ],\n\n              headers: [\n                  {\n                      text: 'Collection ID',\n                      value: \"collectionId\",\n                      align: 'center',\n                       width: '200',\n                  },\n                  {\n                      text: 'Biobank name',\n                      value: \"biobankId\",\n                      align: 'center',\n                       width: '200',\n                  },\n                  {\n                      text: 'Number of rows matched',\n                      value: \"numberOfRows\",\n                      align: 'center',\n                      width: '300',\n                  },\n                {\n                    text: 'Overall hit ratio',\n                    value: 'overallPercentage',\n                    align: 'center',\n                    width: '300',\n                },\n                {\n                    text: 'Overall expected hits',\n                    value: 'overallExpectedRows',\n                    align: 'center',\n                    width: '300',\n                },\n                // Support for multiple LOINC codes\n                {\n                    // this means the \"Rows matched within the Number of rows returned\"\n                    text: 'Expected hits per LOINC',\n                    value: 'revisedRows',\n                    align: 'center',\n                    width: '400',\n                },\n                {\n                    text: 'Hit ratio per LOINC',\n                    value: \"probability\",\n                    width: '400',\n                    align: 'center',\n                    \n                },\n                \n            ],\n              headers2: [\n                   {\n                      text: 'Collection ID',\n                      value: \"collectionId\",\n                      align: 'center',\n                    //    width: '200',\n                  },\n                  {\n                      text: 'Biobank name',\n                      value: \"biobankId\",\n                      align: 'center',\n                    //    width: '200',\n                  },\n                  {\n                      text: 'Number of rows matched',\n                      value: \"numberOfRows\",\n                      align: 'center',\n                    //   width: '300',\n                  },\n                {\n                    text: 'Overall hit ratio',\n                    value: 'overallPercentage',\n                    align: 'center',\n                    // width: '300',\n                },\n                {\n                    text: 'Overall expected hits',\n                    value: 'overallExpectedRows',\n                    align: 'center',\n                    // width: '300',\n                },\n              ],\n\n          }\n      },\n      methods: {\n          add() {\n              this.inputs.push({\n                  name: \"\",\n                  loincCode: '',\n                  value: {\n                      fromValue: '',\n                      toValue: ''\n                  },\n              })\n          },\n          remove(index) {\n              this.inputs.splice(index, 1)\n          },\n\n          async simulatePatrickSendingData() {\n              await axios.post(`${this.url}/api/saveData`)\n          },\n          consoleLog() {\n            //   this.validateForm()\n              for (let input of this.inputs) {\n                  if (!input.value.toValue) {\n                      input.value['toValue'] = input.value['fromValue']\n                  }\n                  else if (!this.rangeQuery) {\n                     input.value['toValue'] = input.value['fromValue']\n                  }\n              }\n              console.log(this.inputs)\n\n          },\n          toggleQueryType() {\n              this.rangeQuery = !this.rangeQuery\n          },\n          validateForm() {\n               for (let input of this.inputs) {\n                      if (input.name === \"\" || input.loincCode === \"\" || input.value.fromValue === \"\" || input.value.toValue === \"\") {\n                           this.valid = false\n                           this.errorTexts = \"Required\"\n                           this.loincErrorTexts = \"Required\"\n                           setTimeout(() => this.errorTexts = \"\", 2000)\n                           setTimeout(() => this.loincErrorTexts = \"\", 2000)\n                           throw 'Please fill in all the fields!'\n                      } \n               }\n          },\n\n          async submit() {\n              try {\n                this.isLoading = true\n                this.queryTime = new Date()\n                for (let input of this.inputs) {\n                    if (!input.value.toValue) {\n                        input.value['toValue'] = input.value['fromValue']\n                    }\n                    else if (!this.rangeQuery) {\n                        input.value['toValue'] = input.value['fromValue']\n                    }\n                }\n                //   console.log(this.inputs)\n                this.validateForm()\n                const data = [... this.inputs]\n                console.log(\"DATA TO BACKEND\", data)\n                const res = await axios.post(`${this.url}/api/data`, data)\n                this.datasetsLoaded = true\n                this.datasets = res.data\n                console.log('RESULTS FROM BACKEND', this.datasets)\n                this.successTitle = 'Query matched successfully!'\n                this.successDetail = 'See ranked results in the table below'\n                setTimeout(() => this.successTitle = \"\", 4000)\n                setTimeout(() => this.successDetail = \"\", 4000)\n                this.isLoading = false\n                this.queryTime = (new Date() - this.queryTime) / 1000\n              } catch (error) {\n                  this.isLoading = false\n                  this.datasetsLoaded = false\n\n                  error === 'Please fill in all the fields!' ? this.errorTitle = 'Something went wrong!' : this.errorTitle = 'Could not find matches for your query!'\n\n                  console.log(\"ERROR HERE\", error)\n\n                  if (error.response) {\n                      this.errorDetail = error.response.data.error;\n                  } else {\n                      this.errorDetail = error;\n                  }\n              }\n          },\n          async searchLoinc(event) {\n              try {\n                  console.log('search LOINC:', event)\n                //   console.log('THIS', this.inputs)\n                  let loincCode = event\n                  if (typeof loincCode == 'string') {\n                      const res = await axios.get(`${this.url}/api/loinc?code=${loincCode}`)\n                      if (res?.status === 200) {\n                          this.currentLoincList = res.data\n                      }\n                  }\n              }\n              catch(error) {\n                  console.log('comes here?')\n                  console.log(error)\n                  this.currentLoincList = []\n                  this.loincErrorTexts = \"LOINC code does not exist! Please try another one.\"\n                  setTimeout(() => this.loincErrorTexts = \"\", 4000)\n              }\n          },\n          checkLoincInput(index) {\n              if (typeof this.inputs[index].loincCode != \"object\") {\n                  //this will force a selection on the combobox\n                  this.inputs[index].loincCode = ''\n              }\n          },\n          clearQueryData() {\n            this.inputs = [{\n                  name: '',\n                  loincCode: '',\n                  value: {\n                      fromValue: '',\n                      toValue: ''\n                  },\n              }],\n              this.datasetsLoaded = false\n          },\n          getColor(hits) {\n              if (hits >= this.thresholdGoodValues) return 'green'\n              else if (hits >= this.thresholdOkayValues) return 'orange'\n              else return 'red'\n          },\n          getColorForExpectedHits(hits) {\n              if (hits >= this.thresholdExpectedHits) return 'green'\n              else return 'red'\n          },\n          getColorPerLoinc(hits) {\n              if (hits >= this.thresholdGoodValuesPerLoinc) return 'green'\n              else if (hits >= this.thresholdOkayValuesPerLoinc) return 'orange'\n              else return 'red'\n          },\n          toggleThreshold() {\n              this.showThreshold = !this.showThreshold\n              this.overallExpectedHitThreshold = false\n              this.overallExpectedHitsPerLoincThreshold = false\n          },\n      },\n      computed: {\n          errorMessages() {\n              return ' <span style=\"font-size:14pt;font-weight:bold;\"> ' + this.errorTitle + ' </span><br> ' + this.errorDetail;\n          },\n      }\n  }\n</script>\n\n<style>\n.container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: flex-start;\n    align-content: flex-start;\n    gap: 10px 20px;\n}\n.button {\n    margin-left: 2em\n}\n.gradientButton {\n    min-height: 48px !important;\n    background: linear-gradient(0deg, #efefef 0%, #ffffff 100%) !important;\n    border: thin #dddddd solid !important;\n    display: flex !important;\n    /*justify-content: space-around !important;*/\n    align-items: center !important;\n    border-radius: 5px !important;\n    font-family: \"Inter\";\n    font-size: 12pt !important;\n    text-transform: none !important;\n    letter-spacing: 0px !important;\n}\n.combobox {\n    width: 50%;\n    margin-left: 2em;\n    position: relative;\n}\n.text-field-name {\n    width: 50%;\n    margin-left: 2em;\n    position: relative;\n}\n\n.helperIcons {\n    cursor: pointer;\n}\n.round {\n  -webkit-border-top-left-radius: 1px;\n  -webkit-border-top-right-radius: 2px;\n  -webkit-border-bottom-right-radius: 3px;\n  -webkit-border-bottom-left-radius: 4px;\n\n  -moz-border-radius-topleft: 1px;\n  -moz-border-radius-topright: 2px;\n  -moz-border-radius-bottomright: 3px;\n  -moz-border-radius-bottomleft: 4px;\n\n  border-top-left-radius: 1px;\n  border-top-right-radius: 2px;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 4px;\n  background-color:  #D3D3D3;\n  border-radius: 100%;\n  /* width: 100%; */\n  padding: 0.2em;\n  padding-bottom: 0.3em;\n  margin: 0.2em;\n  position: relative;\n}\n.round:hover {\n    background-color: #A9A9A9;\n}\n.formExpand {\n    margin-top: 2em;\n    margin-left: 10em;\n}\n.form {\n    margin-top: 2em;\n    margin-left: 10em;\n}\n.pointQuerySheet {\n    margin-left:200px;margin-right:200px; padding: 10px; margin-top: 1.5em; \n}\n.rangeQuerySheet {\n    margin-left:100px;margin-right:100px; padding: 10px; margin-top: 1.5em;\n}\n.text {\n    font-size: 1.1em;\n    font-family: \"Arial\";\n    font-weight: normal ;\n    letter-spacing: 0 ;\n    text-transform: none ;\n}\n#rankingTable table thead tr th {\n    /* background-color: rgba(182, 183, 187); */\n    background-color: #78909C;\n    color: white;\n    font-size: 1.3em;\n    font-family: \"Arial\";\n    font-weight: normal ;\n    letter-spacing: 0 ;\n    text-transform: none ;\n}\n#rankingTable table tr td {\n    font-size: 1.1em;\n    font-family: \"Arial\";\n    font-weight: normal ;\n    letter-spacing: 0 ;\n    text-transform: none ;\n}\n.fancyButton {\n  height: 48px !important;\n  background: linear-gradient(0deg, #efefef 0%, #ffffff 100%) !important;\n  border: thin #dddddd solid !important;\n  display: flex row !important;\n  justify-content: space-around !important;\n  align-items: center !important;\n  border-radius: 5px !important;\n  font-family: \"Arial\";\n  font-size: 12pt !important;\n  font-weight: normal !important;\n  letter-spacing: 0 !important;\n  text-transform: none !important;\n  margin-left: 2em\n}\n\n.fancySwitch {\n    height: 48px !important;\n    display: flex row !important;\n    justify-content: space-around !important;\n    align-items: center !important;\n    border-radius: 5px !important;\n    font-family: \"Arial\";\n    font-size: 12pt !important;\n    font-weight: normal !important;\n    letter-spacing: 0 !important;\n    text-transform: none !important;\n    margin-left: 2em ;\n}\n\n.fancyButtonSkeleton {\n    height: 48px !important;\n    display: flex row !important;\n    justify-content: space-around !important;\n    align-items: center !important;\n    border-radius: 5px !important;\n    font-family: \"Arial\";\n    font-size: 12pt !important;\n    font-weight: normal !important;\n    letter-spacing: 0 !important;\n    text-transform: none !important;\n    margin-left: 0.5em \n}\n\n.testClass {\n    border-color: red;\n    color: red;\n    background-color: red;\n    background: red;\n}\n.v-enter-from {\n    opacity: 0;\n    transform: translateY(-30px)\n    /* transform: dialog-bottom-transition; */\n}\n.v-enter-active {\n    transition: all 0.3s ease-out\n}\n.v-enter-to {\n    opacity: 1;\n    transform: translateY(0);\n}\n.v-leave-from {\n    opacity: 1;\n    transform: translateY(0);\n}\n.v-leave-active {\n    transition: all 0.3s ease-out\n}\n.v-leave-to {\n    opacity: 0;\n    transform: translateY(30px)\n}\n.center-screen {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 5em;\n  /* min-height: 100vh; */\n}\n.center-somewhere {\n    display:flex row; \n    float: left; \n    margin-right:2em; \n    margin-top: 8px;\n    margin-left: 19.5em;\n}\n\n#app {\n  background: url('https://images.unsplash.com/photo-1628595351029-c2bf17511435?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2064&q=80')\n    no-repeat center center fixed !important;\n  background-size: cover;\n}\n\n</style>"]}]}