version: '3'

services:
  loinc-db:
    # image: postgres:14.2
    build:
      context: ./docker
      dockerfile: Dockerfile.loincDB
    container_name: loincdb
    restart: unless-stopped
    environment:
      DB_1_HOST: loinc-db
      # POSTGRES_USER_1: postgres
      # POSTGRES_PASSWORD_1: mypassword
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      # POSTGRES_DB_1: loinc
      POSTGRES_DB: loinc
      # DB_1_PORT: 5435
      PGDATA: /var/lib/postgresql/data/loinc
    # volumes:
    #   - loinc:/var/lib/postgresql/data
      # - loinc-data:/var/lib/postgresql/data
      # - ./pgdata:/var/lib/postgresql/data
    # ports:
    #   - "5435:5432"
    networks:
      - app-network

  collection-manager-db:
    # image: postgres:14.2
    build:
      context: ./docker
      dockerfile: Dockerfile.collectionManagerDB
    container_name: collectionmanagerdb
    restart: unless-stopped
    environment:
      DB_2_HOST: collection-manager-db
      # POSTGRES_USER_2: postgres
      # POSTGRES_PASSWORD_2: mypassword
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      # POSTGRES_DB_2: collection-manager
      POSTGRES_DB: collection-manager
      # DB_2_PORT: 5436
      PGDATA: /var/lib/postgresql/data/collection-manager
    # volumes:
    #   - collection-manager:/var/lib/postgresql/data
      # - collection-manager-data:/var/lib/postgresql/data
      # - ./pgdata:/var/lib/postgresql/data
    # ports:
    #   - "5436:5432"
    depends_on:
      - loinc-db
    networks:
      - app-network

  server:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    container_name: server
    command: npm run start
    restart: unless-stopped
    environment:
      # POSTGRES_USER_1: postgres
      # POSTGRES_PASSWORD_1: mypassword
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB_1: loinc
      # POSTGRES_USER_2: postgres
      # POSTGRES_PASSWORD_2: mypassword
      POSTGRES_DB_2: collection-manager
      DB_1_HOST: loinc-db
      DB_2_HOST: collection-manager-db
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - 5001:5001
    depends_on:
      - loinc-db
      - collection-manager-db
    networks:
      - app-network

  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile.client
    container_name: client
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    ports:
      - 8080:80
    depends_on:
      - loinc-db
      - collection-manager-db
      - server
    networks:
      - app-network

volumes:
  # collection-manager:
  #   driver: local
  # loinc:
  #   driver: local
  server:
    driver: local

networks:
  app-network:
    driver: bridge
